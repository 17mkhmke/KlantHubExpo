# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

trigger:
  branches:
    include:
      - master
variables:
  - group: Mobile # change it to the name you have set
pool:
  vmImage: 'ubuntu-latest'
steps:
  - checkout: self
    persistCredentials: true
    clean: true
  - task: NodeTool@0
    displayName: 'Install Node'
    inputs:
      versionSpec: '18.10.0' # you can use your desired version here
  - script: yarn install --legacy-peer-deps
  
    displayName: Install Dependencies
  - script: |
      # Disable autocommit on version bump 
      yarn config set version-sign-git-tag false
      yarn config set version-git-tag false
      yarn config set version-commit-hooks false
      # Checkout branch where the build is triggered
      git checkout $(Build.SourceBranchName)
      # Extract existing version of package.json
      oldVer=$(jq -r ".version" package.json)
      # Bump version
      yarn version --patch
      # Add bumped version to staging
      git add *
      # Extract new version of package.json
      newVer=$(jq -r ".version" package.json)
      # Set environment variables
      echo "##vso[task.setvariable variable=OLD_VERSION]$oldVer"
      echo "##vso[task.setvariable variable=NEW_VERSION]$newVer"
    displayName: 'Bump version and set variables'
  - task: Gradle@3
    displayName: 'Build APK'
    inputs:
      gradleWrapperFile: 'android/gradlew'
      workingDirectory: 'android/'
      options: '-PversionName=$(NEW_VERSION) -PversionCode=$(Build.BuildId)'
      tasks: 'bundleRelease'
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.17'
      gradleOptions: '-Xmx3072m'
      sonarQubeRunAnalysis: false
  - task: CopyFiles@2
    displayName: Copy and .aab files to artifact staging directory
    inputs:
      contents: |
       **/outputs/**/*.aab
      targetFolder: '$(build.artifactStagingDirectory)'
    

  # - task: AndroidSigning@3
  #   displayName: 'Sign APK'
  #   inputs:
  #     apkFiles: 'android/app/build/outputs/apk/release/*.apk'
  #     apksignerKeystoreFile: 'inspectic-upload-key.keystore'
  #     apksignerKeystorePassword: '$(AndroidKeyStorePassword)'
  #     apksignerKeystoreAlias: '$(AndroidKeyAlias)'
  #     apksignerKeyPassword: '$(AndroidKeyAliasPassword)'
  #     zipalign: true
  - task: PublishBuildArtifacts@1
    displayName: 'Publish APK to artifacts'
    inputs:
      PathtoPublish: '$(build.artifactStagingDirectory)'
      ArtifactName: 'android'
      publishLocation: 'Container'